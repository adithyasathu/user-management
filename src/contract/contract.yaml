swagger: '2.0'

info:
  version: "1.0.0"
  title: User Management API

basePath: /api/v1
paths:
  /health:
    get:
      description: |
        Retrieve the health status of the API
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string
            example:   # Sample object
              message: 'Server is up and running !!'
        500:
          description: Dependencies are not healthy
          schema:
            type: object
            properties:
              errorMessage:
                type: string
            example:   # Sample object
              errorMessage: "MongoDB isn't connected"
  /sign-up:
    post:
      description: |
        User registration request. User would receive an email to confirm his/her account for activation.
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string

        500:
          description: Server Error response
          schema:
            type: object
            properties:
              errorMessage:
                type: string
            example:
              errorMessage: You have already signed up. Please check your email to verify your account.

        400:
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
  /resend-email:
    post:
      description: |
        User can request to resend verification email confirm to his/her email account.
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          required:
          - email
          properties:
            email:
              type: string
          example:   # Sample object
            email: firstname.lastname@gmail.com
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string

        500:
          description: Server Error response
          schema:
            type: object
            properties:
              errorMessage:
                type: string
            example:
              errorMessage: user not found for email-id provided

        400:
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
  /email-verification/{id}:
    get:
      description: |
        This service does the email account verification and activates the user.
      parameters:
      - in: path
        name: id
        type: string
        required: true
        description: ID of the user to verify the email account
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string
            example:   # Sample object
              message: 'Successfully confirmed the User Email Account !!'
        400:
          description: Valiation Error
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Invalid/Expired Verification Id
          schema:
            type: object
            properties:
              errorMessage:
                type: string
            example:   # Sample object
              errorMessage: "Invalid/Expired Verification Id"

  /login:
    post:
      description: |
        User login with email and password.
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          required:
          - email
          - password
          properties:
            email:
              type: string
            password:
              type: string
          example:   # Sample object
            email: firstname.lastname@gmail.com
            password: superpass
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              message:
                type: string

        401:
          description: Unauthenticated User
          schema:
            type: object
            properties:
              errorMessage:
                type: string
            example:
              errorMessage: invalid credentials

        500:
          description: Server Error response
          schema:
            type: object
            properties:
              errorMessage:
                type: string
            example:
              errorMessage: user not found for email-id provided

        400:
          description: Valiation Error
          schema:
            $ref: '#/definitions/Error'

definitions:

  User:
    type: object
    required:
    - firstName
    - lastName
    - email
    - password
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
    example:   # Sample object
      firstName: firstname
      lastName: lastname
      email: firstname.lastname@gmail.com
      password: superpass

  Error:
    type: object
    required:
    - errors
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorDetails'


  ErrorDetails:
    type: object
    properties:
      location:
        type: string
      param:
        type: string
      msg:
        type: string
      value:
        type: string
